/* tslint:disable */
/* eslint-disable */
/*
Visier Document Search API

Visier API for searching for Visier documents

The version of the OpenAPI document: 22222222.99201.1200


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { SimpleDocumentHeaderSearchResponseDTO } from '../models';
// @ts-ignore
import { Status } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * DocumentSearchApi - axios parameter creator
 * @export
 */
export const DocumentSearchApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Perform a simple search for Visier document headers, such as analysis titles. Simple search doesn\'t support keywords, Boolean expressions, or any other advanced search features.  Example: `GET /v1alpha/search/simple/document-headers?q=My+Query&limit=10` returns the first 10 document headers that best match the query string `My Query`.   <br>**Note:** <em>This API is in **alpha**. While in alpha, APIs may change in a breaking way without notice; functionality may be removed, and no deprecation notices will be issued.  If you are interested in using this API, please contact your Customer Success Manager (CSM).</em>
         * @summary Perform a simple search for Visier document headers
         * @param {string} [q] The search query string.
         * @param {number} [limit] The maximum number of results to return. Defaults to 100.
         * @param {number} [offset] The index to start retrieving results from, also known as offset. Defaults to 0.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        simpleSearchDocumentHeaders: async (q?: string, limit?: number, offset?: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/v1alpha/search/simple/document-headers`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication ApiKeyAuth required
            await setApiKeyToObject({ object: localVarHeaderParameter, key: "apikey", keyParamName: "apiKeyAuth", configuration })
            // authentication BearerAuth required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            // authentication CookieAuth required
            await setApiKeyToObject({object: localVarHeaderParameter, type: "Cookie", key: "Cookie", keyParamName: "VisierASIDToken", configuration})
            // authentication OAuth2Auth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OAuth2Auth", [], configuration)
            // authentication OAuth2Auth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "OAuth2Auth", [], configuration)
            if (q !== undefined) {
                localVarQueryParameter['q'] = q;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/v1alpha/search/simple/document-headers',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DocumentSearchApi - functional programming interface
 * @export
 */
export const DocumentSearchApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = DocumentSearchApiAxiosParamCreator(configuration)
    return {
        /**
         * Perform a simple search for Visier document headers, such as analysis titles. Simple search doesn\'t support keywords, Boolean expressions, or any other advanced search features.  Example: `GET /v1alpha/search/simple/document-headers?q=My+Query&limit=10` returns the first 10 document headers that best match the query string `My Query`.   <br>**Note:** <em>This API is in **alpha**. While in alpha, APIs may change in a breaking way without notice; functionality may be removed, and no deprecation notices will be issued.  If you are interested in using this API, please contact your Customer Success Manager (CSM).</em>
         * @summary Perform a simple search for Visier document headers
         * @param {DocumentSearchApiSimpleSearchDocumentHeadersRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async simpleSearchDocumentHeaders(requestParameters: DocumentSearchApiSimpleSearchDocumentHeadersRequest = {}, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SimpleDocumentHeaderSearchResponseDTO>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.simpleSearchDocumentHeaders(requestParameters.q, requestParameters.limit, requestParameters.offset, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * DocumentSearchApi - factory interface
 * @export
 */
export const DocumentSearchApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = DocumentSearchApiFp(configuration)
    return {
        /**
         * Perform a simple search for Visier document headers, such as analysis titles. Simple search doesn\'t support keywords, Boolean expressions, or any other advanced search features.  Example: `GET /v1alpha/search/simple/document-headers?q=My+Query&limit=10` returns the first 10 document headers that best match the query string `My Query`.   <br>**Note:** <em>This API is in **alpha**. While in alpha, APIs may change in a breaking way without notice; functionality may be removed, and no deprecation notices will be issued.  If you are interested in using this API, please contact your Customer Success Manager (CSM).</em>
         * @summary Perform a simple search for Visier document headers
         * @param {DocumentSearchApiSimpleSearchDocumentHeadersRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        simpleSearchDocumentHeaders(requestParameters: DocumentSearchApiSimpleSearchDocumentHeadersRequest = {}, options?: AxiosRequestConfig): AxiosPromise<SimpleDocumentHeaderSearchResponseDTO> {
            return localVarFp.simpleSearchDocumentHeaders(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for simpleSearchDocumentHeaders operation in DocumentSearchApi.
 * @export
 * @interface DocumentSearchApiSimpleSearchDocumentHeadersRequest
 */
export type DocumentSearchApiSimpleSearchDocumentHeadersRequest = {
    
    /**
    * The search query string.
    * @type {string}
    * @memberof DocumentSearchApiSimpleSearchDocumentHeaders
    */
    readonly q?: string
    
    /**
    * The maximum number of results to return. Defaults to 100.
    * @type {number}
    * @memberof DocumentSearchApiSimpleSearchDocumentHeaders
    */
    readonly limit?: number
    
    /**
    * The index to start retrieving results from, also known as offset. Defaults to 0.
    * @type {number}
    * @memberof DocumentSearchApiSimpleSearchDocumentHeaders
    */
    readonly offset?: number
    
}

/**
 * DocumentSearchApiGenerated - object-oriented interface
 * @export
 * @class DocumentSearchApiGenerated
 * @extends {BaseAPI}
 */
export class DocumentSearchApiGenerated extends BaseAPI {
    /**
     * Perform a simple search for Visier document headers, such as analysis titles. Simple search doesn\'t support keywords, Boolean expressions, or any other advanced search features.  Example: `GET /v1alpha/search/simple/document-headers?q=My+Query&limit=10` returns the first 10 document headers that best match the query string `My Query`.   <br>**Note:** <em>This API is in **alpha**. While in alpha, APIs may change in a breaking way without notice; functionality may be removed, and no deprecation notices will be issued.  If you are interested in using this API, please contact your Customer Success Manager (CSM).</em>
     * @summary Perform a simple search for Visier document headers
     * @param {DocumentSearchApiSimpleSearchDocumentHeadersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DocumentSearchApiGenerated
     */
    public simpleSearchDocumentHeaders(requestParameters: DocumentSearchApiSimpleSearchDocumentHeadersRequest = {}, options?: AxiosRequestConfig) {
        return DocumentSearchApiFp(this.configuration).simpleSearchDocumentHeaders(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
